import { BigNumberish, BytesLike } from 'ethers';
export interface TypedDataDomain {
    name?: string;
    version?: string;
    chainId?: BigNumberish;
    verifyingContract?: string;
    salt?: BytesLike;
}
export interface TypedDataField {
    name: string;
    type: string;
}
export declare type SignTypedDataArgs = {
    /** Domain or domain signature for origin or contract */
    domain: TypedDataDomain;
    /** Named list of all type definitions */
    types: Record<string, Array<TypedDataField>>;
    /** Data to sign */
    value: Record<string, any>;
};
export declare type SignTypedDataResult = string;
export declare function signTypedData(args: SignTypedDataArgs): Promise<SignTypedDataResult>;
