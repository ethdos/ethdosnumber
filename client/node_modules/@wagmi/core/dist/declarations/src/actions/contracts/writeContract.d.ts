import { CallOverrides, Contract as EthersContract, providers } from 'ethers';
import { GetContractArgs } from './getContract';
export declare type WriteContractArgs = GetContractArgs;
export declare type WriteContractConfig = {
    /** Arguments to pass contract method */
    args?: any | any[];
    overrides?: CallOverrides;
};
export declare type WriteContractResult = providers.TransactionResponse;
export declare function writeContract<Contract extends EthersContract = EthersContract>(contractConfig: WriteContractArgs, functionName: string, { args, overrides }?: WriteContractConfig): Promise<WriteContractResult>;
