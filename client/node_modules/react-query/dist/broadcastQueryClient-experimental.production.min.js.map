{"version":3,"file":"broadcastQueryClient-experimental.production.min.js","sources":["../node_modules/broadcast-channel/dist/es/util.js","../node_modules/broadcast-channel/dist/es/methods/native.js","../node_modules/broadcast-channel/dist/es/oblivious-set.js","../node_modules/broadcast-channel/dist/es/options.js","../node_modules/broadcast-channel/dist/es/methods/indexed-db.js","../node_modules/broadcast-channel/dist/es/methods/localstorage.js","../node_modules/broadcast-channel/dist/es/methods/simulate.js","../node_modules/broadcast-channel/dist/es/method-chooser.js","../node_modules/broadcast-channel/dist/es/broadcast-channel.js","../src/broadcastQueryClient-experimental/index.ts"],"sourcesContent":["/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function sleep(time) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(res, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nexport function microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\nexport var isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';","import { microSeconds as micro, isNode } from '../util';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.bc.postMessage(messageJson, false);\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (isNode && typeof window === 'undefined') return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n * @constructor\n */\nvar ObliviousSet = function ObliviousSet(ttl) {\n  var set = new Set();\n  var timeMap = new Map();\n  this.has = set.has.bind(set);\n\n  this.add = function (value) {\n    timeMap.set(value, now());\n    set.add(value);\n\n    _removeTooOldValues();\n  };\n\n  this.clear = function () {\n    set.clear();\n    timeMap.clear();\n  };\n\n  function _removeTooOldValues() {\n    var olderThen = now() - ttl;\n    var iterator = set[Symbol.iterator]();\n\n    while (true) {\n      var value = iterator.next().value;\n      if (!value) return; // no more elements\n\n      var time = timeMap.get(value);\n\n      if (time < olderThen) {\n        timeMap[\"delete\"](value);\n        set[\"delete\"](value);\n      } else {\n        // we reached a value that is not old enough\n        return;\n      }\n    }\n  }\n};\n\nfunction now() {\n  return new Date().getTime();\n}\n\nexport default ObliviousSet;","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions)); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods; // node\n\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n */\nimport { sleep, randomInt, randomToken, microSeconds as micro, isNode } from '../util.js';\nexport var microSeconds = micro;\nimport ObliviousSet from '../oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n\n  return false;\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb(); // create table\n\n  var dbName = DB_PREFIX + channelName;\n  var openRequest = IndexedDB.open(dbName, 1);\n\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n/**\n * writes the new message to the database\n * so other readers can find it\n */\n\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var transaction = db.transaction([OBJECT_STORE_ID], 'readwrite');\n  return new Promise(function (res, rej) {\n    transaction.oncomplete = function () {\n      return res();\n    };\n\n    transaction.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    var objectStore = transaction.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n  });\n}\nexport function getAllMessages(db) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        ret.push(cursor.value); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n        cursor[\"continue\"]();\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n\n  return new Promise(function (res) {\n    openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessageById(db, id) {\n  var request = db.transaction([OBJECT_STORE_ID], 'readwrite').objectStore(OBJECT_STORE_ID)[\"delete\"](id);\n  return new Promise(function (res) {\n    request.onsuccess = function () {\n      return res();\n    };\n  });\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        var msgObk = cursor.value;\n\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(db, ttl) {\n  return getOldMessages(db, ttl).then(function (tooOld) {\n    return Promise.all(tooOld.map(function (msgObj) {\n      return removeMessageById(db, msgObj.id);\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: Promise.resolve(),\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n\n\n    _readLoop(state);\n\n    return state;\n  });\n}\n\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\n\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n\n  return true;\n}\n/**\n * reads all new messages from the database and emits them\n */\n\n\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return Promise.resolve(); // if no one is listening, we do not need to scan for new messages\n\n  if (!state.messagesCallback) return Promise.resolve();\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */\n    .filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return Promise.resolve();\n  });\n}\n\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState.db, channelState.options.idb.ttl);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  if (isNode) return false;\n  var idb = getIdb();\n  if (!idb) return false;\n  return true;\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nimport ObliviousSet from '../oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nimport { sleep, randomToken, microSeconds as micro, isNode } from '../util';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = randomToken();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if (isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import NativeMethod from './methods/native.js';\nimport IndexeDbMethod from './methods/indexed-db.js';\nimport LocalstorageMethod from './methods/localstorage.js';\nimport SimulateMethod from './methods/simulate.js';\nimport { isNode } from './util'; // order is important\n\nvar METHODS = [NativeMethod, // fastest\nIndexeDbMethod, LocalstorageMethod];\n/**\n * The NodeMethod is loaded lazy\n * so it will not get bundled in browser-builds\n */\n\nif (isNode) {\n  /**\n   * we use the non-transpiled code for nodejs\n   * because it runs faster\n   */\n  var NodeMethod = require('../../src/methods/' + // use this hack so that browserify and others\n  // do not import the node-method by default\n  // when bundling.\n  'node.js');\n  /**\n   * this will be false for webpackbuilds\n   * which will shim the node-method with an empty object {}\n   */\n\n\n  if (typeof NodeMethod.canBeUsed === 'function') {\n    METHODS.push(NodeMethod);\n  }\n}\n\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // directly chosen\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport && !isNode) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error('No useable methode found:' + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","import { isPromise } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  this.name = name;\n\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options); // isListening\n\n  this._iL = false;\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n\n  this._onML = null;\n  /**\n   * _addEventListeners\n   */\n\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n\n  this._befC = [];\n  /**\n   * _preparePromise\n   */\n\n  this._prepP = null;\n\n  _prepareChannel(this);\n}; // STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\n\nBroadcastChannel._pubkey = true;\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\n\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return Promise.resolve(false);\n  }\n}\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\n\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n} // PROTOTYPE\n\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed');\n    }\n\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _removeListenerObject(this, 'message', this._onML);\n\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n\n    if (this.closed) return;\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : Promise.resolve();\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare.then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    }).then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n\n  get type() {\n    return this.method.type;\n  }\n\n};\n\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : Promise.resolve();\n  return awaitPrepare.then(function () {\n    return broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n  });\n}\n\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\n\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\n\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n\n  _startListening(channel);\n}\n\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n\n  _stopListening(channel);\n}\n\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (obj) {\n        if (msgObj.time >= obj.time) {\n          obj.fn(msgObj.data);\n        }\n      });\n    };\n\n    var time = channel.method.microSeconds();\n\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\n\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { BroadcastChannel } from 'broadcast-channel'\nimport { QueryClient } from '../core'\n\ninterface BroadcastQueryClientOptions {\n  queryClient: QueryClient\n  broadcastChannel?: string\n}\n\nexport function broadcastQueryClient({\n  queryClient,\n  broadcastChannel = 'react-query',\n}: BroadcastQueryClientOptions) {\n  let transaction = false\n  const tx = (cb: () => void) => {\n    transaction = true\n    cb()\n    transaction = false\n  }\n\n  const channel = new BroadcastChannel(broadcastChannel, {\n    webWorkerSupport: false,\n  })\n\n  const queryCache = queryClient.getQueryCache()\n\n  queryClient.getQueryCache().subscribe(queryEvent => {\n    if (transaction) {\n      return\n    }\n\n    const {\n      query: { queryHash, queryKey, state },\n    } = queryEvent\n\n    if (queryEvent.type === 'updated' && queryEvent.action.type === 'success') {\n      channel.postMessage({\n        type: 'updated',\n        queryHash,\n        queryKey,\n        state,\n      })\n    }\n\n    if (queryEvent.type === 'removed') {\n      channel.postMessage({\n        type: 'removed',\n        queryHash,\n        queryKey,\n      })\n    }\n  })\n\n  channel.onmessage = action => {\n    if (!action?.type) {\n      return\n    }\n\n    tx(() => {\n      const { type, queryHash, queryKey, state } = action\n\n      if (type === 'updated') {\n        const query = queryCache.get(queryHash)\n\n        if (query) {\n          query.setState(state)\n          return\n        }\n\n        queryCache.build(\n          queryClient,\n          {\n            queryKey,\n            queryHash,\n          },\n          state\n        )\n      } else if (type === 'removed') {\n        const query = queryCache.get(queryHash)\n\n        if (query) {\n          queryCache.remove(query)\n        }\n      }\n    })\n  }\n}\n"],"names":["sleep","time","Promise","res","setTimeout","randomToken","Math","random","toString","substring","lastMs","additional","microSeconds","ms","Date","getTime","isNode","Object","prototype","call","process","NativeMethod","create","channelName","state","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","data","close","channelState","onMessage","fn","postMessage","messageJson","canBeUsed","window","_pubkey","Error","type","averageResponseTime","micro","now","ObliviousSet$1","ttl","set","Set","timeMap","Map","has","bind","this","add","value","olderThen","iterator","Symbol","next","get","_removeTooOldValues","clear","fillOptionsWithDefaults","originalOptions","arguments","length","undefined","options","JSON","parse","stringify","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","useFastPath","OBJECT_STORE_ID","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","getMessagesHigherThan","db","lastCursorId","objectStore","transaction","ret","keyRangeValue","IDBKeyRange","bound","Infinity","openCursor","e","onsuccess","ev","cursor","target","result","id","push","cleanOldMessages","getOldMessages","msgObk","then","tooOld","all","map","msgObj","request","removeMessageById","_readLoop","closed","readNewMessages","resolve","newerMessages","useMessages","filter","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","forEach","IndexeDbMethod","createDatabase","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","rej","onerror","ObliviousSet","writeBlockPromise","readQueuePromises","writeMessage","readerUuid","writeObject","oncomplete","min","max","floor","getLocalStorage","localStorage","storageKey","KEY_PREFIX","ls","key","setItem","removeItem","LocalstorageMethod","listener","newValue","addEventListener","addStorageEventListener","token","removeEventListener","writeObj","document","createEvent","initEvent","dispatchEvent","defaultTime","userAgent","navigator","toLowerCase","includes","SIMULATE_CHANNELS","SimulateMethod","name","Array","from","channel","METHODS","NodeMethod","require","maybePromise","obj","method","chooseMethods","concat","Boolean","find","m","useMethod","chooseMethod","_iL","_onML","_addEL","message","internal","_befC","_prepP","s","_state","_post","broadcastChannel","_hasMessageListeners","_addListenerObject","listenerFn","_startListening","_removeListenerObject","o","_stopListening","BroadcastChannel$1","postInternal","listenObj","_this","awaitPrepare","queryClient","tx","queryCache","getQueryCache","subscribe","queryEvent","query","queryHash","queryKey","action","cb","setState","build","remove"],"mappings":"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"}