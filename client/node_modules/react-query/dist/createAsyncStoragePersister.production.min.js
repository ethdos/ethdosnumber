!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ReactQueryCreateAsyncStoragePersister={})}(this,(function(e){"use strict";const t=()=>{};function r(e,{interval:r=1e3,onError:n=t}={}){if("function"!=typeof e)throw new Error("argument is not function.");let i,o=!1,s=0,a=null;const l=async()=>{if(a){const t=a;a=null;try{o=!0,await e(...t)}catch(e){n(e)}finally{s=Date.now(),o=!1}}},c=async()=>{clearTimeout(i),i=setTimeout((()=>{o?c():l()}),r)};return(...e)=>{a=e;const t=Date.now()-s<r;o||t?c():l()}}function n(){}e.createAsyncStoragePersister=({storage:e,key:t="REACT_QUERY_OFFLINE_CACHE",throttleTime:i=1e3,serialize:o=JSON.stringify,deserialize:s=JSON.parse,retry:a})=>{if(void 0!==e){const n=async r=>{try{await e.setItem(t,o(r))}catch(e){return e}};return{persistClient:r((async e=>{let t=e,r=await n(t),i=0;for(;r&&t;)i++,t=await(null==a?void 0:a({persistedClient:t,error:r,errorCount:i})),t&&(r=await n(t))}),{interval:i}),restoreClient:async()=>{const r=await e.getItem(t);if(r)return s(r)},removeClient:()=>e.removeItem(t)}}return{persistClient:n,restoreClient:n,removeClient:n}},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=createAsyncStoragePersister.production.min.js.map
