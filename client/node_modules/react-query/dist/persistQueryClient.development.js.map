{"version":3,"file":"persistQueryClient.development.js","sources":["../src/core/hydration.ts","../src/persistQueryClient/persist.ts","../src/reactjs/QueryClientProvider.tsx","../src/reactjs/isRestoring.tsx","../src/persistQueryClient/PersistQueryClientProvider.tsx","../src/persistQueryClient/retryStrategies.ts"],"sourcesContent":["import type { QueryClient } from './queryClient'\nimport type { Query, QueryState } from './query'\nimport type {\n  MutationKey,\n  MutationOptions,\n  QueryKey,\n  QueryOptions,\n} from './types'\nimport type { Mutation, MutationState } from './mutation'\n\n// TYPES\n\nexport interface DehydrateOptions {\n  dehydrateMutations?: boolean\n  dehydrateQueries?: boolean\n  shouldDehydrateMutation?: ShouldDehydrateMutationFunction\n  shouldDehydrateQuery?: ShouldDehydrateQueryFunction\n}\n\nexport interface HydrateOptions {\n  defaultOptions?: {\n    queries?: QueryOptions\n    mutations?: MutationOptions\n  }\n}\n\ninterface DehydratedMutation {\n  mutationKey?: MutationKey\n  state: MutationState\n}\n\ninterface DehydratedQuery {\n  queryHash: string\n  queryKey: QueryKey\n  state: QueryState\n}\n\nexport interface DehydratedState {\n  mutations: DehydratedMutation[]\n  queries: DehydratedQuery[]\n}\n\nexport type ShouldDehydrateQueryFunction = (query: Query) => boolean\n\nexport type ShouldDehydrateMutationFunction = (mutation: Mutation) => boolean\n\n// FUNCTIONS\n\nfunction dehydrateMutation(mutation: Mutation): DehydratedMutation {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state,\n  }\n}\n\n// Most config is not dehydrated but instead meant to configure again when\n// consuming the de/rehydrated data, typically with useQuery on the client.\n// Sometimes it might make sense to prefetch data on the server and include\n// in the html-payload, but not consume it on the initial render.\nfunction dehydrateQuery(query: Query): DehydratedQuery {\n  return {\n    state: query.state,\n    queryKey: query.queryKey,\n    queryHash: query.queryHash,\n  }\n}\n\nfunction defaultShouldDehydrateMutation(mutation: Mutation) {\n  return mutation.state.isPaused\n}\n\nfunction defaultShouldDehydrateQuery(query: Query) {\n  return query.state.status === 'success'\n}\n\nexport function dehydrate(\n  client: QueryClient,\n  options: DehydrateOptions = {}\n): DehydratedState {\n  const mutations: DehydratedMutation[] = []\n  const queries: DehydratedQuery[] = []\n\n  if (options.dehydrateMutations !== false) {\n    const shouldDehydrateMutation =\n      options.shouldDehydrateMutation || defaultShouldDehydrateMutation\n\n    client\n      .getMutationCache()\n      .getAll()\n      .forEach(mutation => {\n        if (shouldDehydrateMutation(mutation)) {\n          mutations.push(dehydrateMutation(mutation))\n        }\n      })\n  }\n\n  if (options.dehydrateQueries !== false) {\n    const shouldDehydrateQuery =\n      options.shouldDehydrateQuery || defaultShouldDehydrateQuery\n\n    client\n      .getQueryCache()\n      .getAll()\n      .forEach(query => {\n        if (shouldDehydrateQuery(query)) {\n          queries.push(dehydrateQuery(query))\n        }\n      })\n  }\n\n  return { mutations, queries }\n}\n\nexport function hydrate(\n  client: QueryClient,\n  dehydratedState: unknown,\n  options?: HydrateOptions\n): void {\n  if (typeof dehydratedState !== 'object' || dehydratedState === null) {\n    return\n  }\n\n  const mutationCache = client.getMutationCache()\n  const queryCache = client.getQueryCache()\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  const mutations = (dehydratedState as DehydratedState).mutations || []\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  const queries = (dehydratedState as DehydratedState).queries || []\n\n  mutations.forEach(dehydratedMutation => {\n    mutationCache.build(\n      client,\n      {\n        ...options?.defaultOptions?.mutations,\n        mutationKey: dehydratedMutation.mutationKey,\n      },\n      dehydratedMutation.state\n    )\n  })\n\n  queries.forEach(dehydratedQuery => {\n    const query = queryCache.get(dehydratedQuery.queryHash)\n\n    // Do not hydrate if an existing query exists with newer data\n    if (query) {\n      if (query.state.dataUpdatedAt < dehydratedQuery.state.dataUpdatedAt) {\n        query.setState(dehydratedQuery.state)\n      }\n      return\n    }\n\n    // Restore query\n    queryCache.build(\n      client,\n      {\n        ...options?.defaultOptions?.queries,\n        queryKey: dehydratedQuery.queryKey,\n        queryHash: dehydratedQuery.queryHash,\n      },\n      dehydratedQuery.state\n    )\n  })\n}\n","import {\n  QueryClient,\n  dehydrate,\n  DehydratedState,\n  DehydrateOptions,\n  HydrateOptions,\n  hydrate,\n} from '../core'\n\nexport type Promisable<T> = T | PromiseLike<T>\n\nexport interface Persister {\n  persistClient(persistClient: PersistedClient): Promisable<void>\n  restoreClient(): Promisable<PersistedClient | undefined>\n  removeClient(): Promisable<void>\n}\n\nexport interface PersistedClient {\n  timestamp: number\n  buster: string\n  clientState: DehydratedState\n}\n\nexport interface PersistQueryClienRootOptions {\n  /** The QueryClient to persist */\n  queryClient: QueryClient\n  /** The Persister interface for storing and restoring the cache\n   * to/from a persisted location */\n  persister: Persister\n  /** A unique string that can be used to forcefully\n   * invalidate existing caches if they do not share the same buster string */\n  buster?: string\n}\n\nexport interface PersistedQueryClientRestoreOptions\n  extends PersistQueryClienRootOptions {\n  /** The max-allowed age of the cache in milliseconds.\n   * If a persisted cache is found that is older than this\n   * time, it will be discarded */\n  maxAge?: number\n  /** The options passed to the hydrate function */\n  hydrateOptions?: HydrateOptions\n}\n\nexport interface PersistedQueryClientSaveOptions\n  extends PersistQueryClienRootOptions {\n  /** The options passed to the dehydrate function */\n  dehydrateOptions?: DehydrateOptions\n}\n\nexport interface PersistQueryClientOptions\n  extends PersistedQueryClientRestoreOptions,\n    PersistedQueryClientSaveOptions,\n    PersistQueryClienRootOptions {}\n\n/**\n * Restores persisted data to the QueryCache\n *  - data obtained from persister.restoreClient\n *  - data is hydrated using hydrateOptions\n * If data is expired, busted, empty, or throws, it runs persister.removeClient\n */\nexport async function persistQueryClientRestore({\n  queryClient,\n  persister,\n  maxAge = 1000 * 60 * 60 * 24,\n  buster = '',\n  hydrateOptions,\n}: PersistedQueryClientRestoreOptions) {\n  try {\n    const persistedClient = await persister.restoreClient()\n\n    if (persistedClient) {\n      if (persistedClient.timestamp) {\n        const expired = Date.now() - persistedClient.timestamp > maxAge\n        const busted = persistedClient.buster !== buster\n        if (expired || busted) {\n          persister.removeClient()\n        } else {\n          hydrate(queryClient, persistedClient.clientState, hydrateOptions)\n        }\n      } else {\n        persister.removeClient()\n      }\n    }\n  } catch (err) {\n    if (process.env.NODE_ENV !== 'production') {\n      queryClient.getLogger().error(err)\n      queryClient\n        .getLogger()\n        .warn(\n          'Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded.'\n        )\n    }\n    persister.removeClient()\n  }\n}\n\n/**\n * Persists data from the QueryCache\n *  - data dehydrated using dehydrateOptions\n *  - data is persisted using persister.persistClient\n */\nexport async function persistQueryClientSave({\n  queryClient,\n  persister,\n  buster = '',\n  dehydrateOptions,\n}: PersistedQueryClientSaveOptions) {\n  const persistClient: PersistedClient = {\n    buster,\n    timestamp: Date.now(),\n    clientState: dehydrate(queryClient, dehydrateOptions),\n  }\n\n  await persister.persistClient(persistClient)\n}\n\n/**\n * Subscribe to QueryCache and MutationCache updates (for persisting)\n * @returns an unsubscribe function (to discontinue monitoring)\n */\nexport function persistQueryClientSubscribe(\n  props: PersistedQueryClientSaveOptions\n) {\n  const unsubscribeQueryCache = props.queryClient\n    .getQueryCache()\n    .subscribe(() => {\n      persistQueryClientSave(props)\n    })\n\n  const unusbscribeMutationCache = props.queryClient\n    .getMutationCache()\n    .subscribe(() => {\n      persistQueryClientSave(props)\n    })\n\n  return () => {\n    unsubscribeQueryCache()\n    unusbscribeMutationCache()\n  }\n}\n\n/**\n * Restores persisted data to QueryCache and persists further changes.\n */\nexport function persistQueryClient(\n  props: PersistQueryClientOptions\n): [() => void, Promise<void>] {\n  let hasUnsubscribed = false\n  let persistQueryClientUnsubscribe: (() => void) | undefined\n  const unsubscribe = () => {\n    hasUnsubscribed = true\n    persistQueryClientUnsubscribe?.()\n  }\n\n  // Attempt restore\n  const restorePromise = persistQueryClientRestore(props).then(() => {\n    if (!hasUnsubscribed) {\n      // Subscribe to changes in the query cache to trigger the save\n      persistQueryClientUnsubscribe = persistQueryClientSubscribe(props)\n    }\n  })\n\n  return [unsubscribe, restorePromise]\n}\n","import React from 'react'\n\nimport { QueryClient } from '../core'\nimport { ContextOptions } from '../reactjs/types'\n\ndeclare global {\n  interface Window {\n    ReactQueryClientContext?: React.Context<QueryClient | undefined>\n  }\n}\n\nexport const defaultContext = React.createContext<QueryClient | undefined>(\n  undefined\n)\nconst QueryClientSharingContext = React.createContext<boolean>(false)\n\n// If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\nfunction getQueryClientContext(\n  context: React.Context<QueryClient | undefined> | undefined,\n  contextSharing: boolean\n) {\n  if (context) {\n    return context\n  }\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext\n    }\n\n    return window.ReactQueryClientContext\n  }\n\n  return defaultContext\n}\n\nexport const useQueryClient = ({ context }: ContextOptions = {}) => {\n  const queryClient = React.useContext(\n    getQueryClientContext(context, React.useContext(QueryClientSharingContext))\n  )\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return queryClient\n}\n\ntype QueryClientProviderPropsBase = {\n  client: QueryClient\n  children?: React.ReactNode\n}\ntype QueryClientProviderPropsWithContext = ContextOptions & {\n  contextSharing?: never\n} & QueryClientProviderPropsBase\ntype QueryClientProviderPropsWithContextSharing = {\n  context?: never\n  contextSharing?: boolean\n} & QueryClientProviderPropsBase\n\nexport type QueryClientProviderProps =\n  | QueryClientProviderPropsWithContext\n  | QueryClientProviderPropsWithContextSharing\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false,\n}: QueryClientProviderProps): JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  const Context = getQueryClientContext(context, contextSharing)\n\n  return (\n    <QueryClientSharingContext.Provider value={!context && contextSharing}>\n      <Context.Provider value={client}>{children}</Context.Provider>\n    </QueryClientSharingContext.Provider>\n  )\n}\n","import React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n","import React from 'react'\n\nimport { persistQueryClient, PersistQueryClientOptions } from './persist'\nimport { QueryClientProvider, QueryClientProviderProps } from '../reactjs'\nimport { IsRestoringProvider } from '../reactjs/isRestoring'\n\nexport type PersistQueryClientProviderProps = QueryClientProviderProps & {\n  persistOptions: Omit<PersistQueryClientOptions, 'queryClient'>\n  onSuccess?: () => void\n}\n\nexport const PersistQueryClientProvider = ({\n  client,\n  children,\n  persistOptions,\n  onSuccess,\n  ...props\n}: PersistQueryClientProviderProps): JSX.Element => {\n  const [isRestoring, setIsRestoring] = React.useState(true)\n  const refs = React.useRef({ persistOptions, onSuccess })\n\n  React.useEffect(() => {\n    refs.current = { persistOptions, onSuccess }\n  })\n\n  React.useEffect(() => {\n    let isStale = false\n    setIsRestoring(true)\n    const [unsubscribe, promise] = persistQueryClient({\n      ...refs.current.persistOptions,\n      queryClient: client,\n    })\n\n    promise.then(() => {\n      if (!isStale) {\n        refs.current.onSuccess?.()\n        setIsRestoring(false)\n      }\n    })\n\n    return () => {\n      isStale = true\n      unsubscribe()\n    }\n  }, [client])\n\n  return (\n    <QueryClientProvider client={client} {...props}>\n      <IsRestoringProvider value={isRestoring}>{children}</IsRestoringProvider>\n    </QueryClientProvider>\n  )\n}\n","import { PersistedClient } from './persist'\n\nexport type PersistRetryer = (props: {\n  persistedClient: PersistedClient\n  error: Error\n  errorCount: number\n}) => PersistedClient | undefined\n\nexport const removeOldestQuery: PersistRetryer = ({ persistedClient }) => {\n  const mutations = [...persistedClient.clientState.mutations]\n  const queries = [...persistedClient.clientState.queries]\n  const client: PersistedClient = {\n    ...persistedClient,\n    clientState: { mutations, queries },\n  }\n\n  // sort queries by dataUpdatedAt (oldest first)\n  const sortedQueries = [...queries].sort(\n    (a, b) => a.state.dataUpdatedAt - b.state.dataUpdatedAt\n  )\n\n  // clean oldest query\n  if (sortedQueries.length > 0) {\n    const oldestData = sortedQueries.shift()\n    client.clientState.queries = queries.filter(q => q !== oldestData)\n    return client\n  }\n\n  return undefined\n}\n"],"names":["dehydrateMutation","mutation","mutationKey","options","state","dehydrateQuery","query","queryKey","queryHash","defaultShouldDehydrateMutation","isPaused","defaultShouldDehydrateQuery","status","dehydrate","client","mutations","queries","dehydrateMutations","shouldDehydrateMutation","getMutationCache","getAll","forEach","push","dehydrateQueries","shouldDehydrateQuery","getQueryCache","hydrate","dehydratedState","mutationCache","queryCache","dehydratedMutation","build","defaultOptions","dehydratedQuery","get","dataUpdatedAt","setState","persistQueryClientRestore","queryClient","persister","maxAge","buster","hydrateOptions","persistedClient","restoreClient","timestamp","expired","Date","now","busted","removeClient","clientState","err","process","env","NODE_ENV","getLogger","error","warn","persistQueryClientSave","dehydrateOptions","persistClient","persistQueryClientSubscribe","props","unsubscribeQueryCache","subscribe","unusbscribeMutationCache","persistQueryClient","hasUnsubscribed","persistQueryClientUnsubscribe","unsubscribe","restorePromise","then","defaultContext","React","createContext","undefined","QueryClientSharingContext","getQueryClientContext","context","contextSharing","window","ReactQueryClientContext","QueryClientProvider","children","useEffect","mount","unmount","Context","IsRestoringContext","IsRestoringProvider","Provider","PersistQueryClientProvider","persistOptions","onSuccess","isRestoring","setIsRestoring","useState","refs","useRef","current","isStale","promise","removeOldestQuery","sortedQueries","sort","a","b","length","oldestData","shift","filter","q"],"mappings":";;;;;;;;;;EAUA;EAoCA;EAEA,SAASA,iBAAT,CAA2BC,QAA3B,EAAmE;EACjE,EAAO,OAAA;EACLC,IAAAA,WAAW,EAAED,QAAQ,CAACE,OAAT,CAAiBD,WADzB;EAELE,IAAAA,KAAK,EAAEH,QAAQ,CAACG,KAAAA;EAFX,GAAP,CAAA;EAID;EAGD;EACA;EACA;;;EACA,SAASC,cAAT,CAAwBC,KAAxB,EAAuD;EACrD,EAAO,OAAA;EACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF,KADR;EAELG,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAFX;EAGLC,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAAAA;EAHZ,GAAP,CAAA;EAKD,CAAA;;EAED,SAASC,8BAAT,CAAwCR,QAAxC,EAA4D;EAC1D,EAAA,OAAOA,QAAQ,CAACG,KAAT,CAAeM,QAAtB,CAAA;EACD,CAAA;;EAED,SAASC,2BAAT,CAAqCL,KAArC,EAAmD;EACjD,EAAA,OAAOA,KAAK,CAACF,KAAN,CAAYQ,MAAZ,KAAuB,SAA9B,CAAA;EACD,CAAA;;EAEM,SAASC,SAAT,CACLC,MADK,EAELX,OAAyB,GAAG,EAFvB,EAGY;EACjB,EAAMY,MAAAA,SAA+B,GAAG,EAAxC,CAAA;EACA,EAAMC,MAAAA,OAA0B,GAAG,EAAnC,CAAA;;EAEA,EAAA,IAAIb,OAAO,CAACc,kBAAR,KAA+B,KAAnC,EAA0C;EACxC,IAAA,MAAMC,uBAAuB,GAC3Bf,OAAO,CAACe,uBAAR,IAAmCT,8BADrC,CAAA;EAGAK,IAAAA,MAAM,CACHK,gBADH,EAAA,CAEGC,MAFH,EAGGC,CAAAA,OAHH,CAGWpB,QAAQ,IAAI;EACnB,MAAA,IAAIiB,uBAAuB,CAACjB,QAAD,CAA3B,EAAuC;EACrCc,QAAAA,SAAS,CAACO,IAAV,CAAetB,iBAAiB,CAACC,QAAD,CAAhC,CAAA,CAAA;EACD,OAAA;EACF,KAPH,CAAA,CAAA;EAQD,GAAA;;EAED,EAAA,IAAIE,OAAO,CAACoB,gBAAR,KAA6B,KAAjC,EAAwC;EACtC,IAAA,MAAMC,oBAAoB,GACxBrB,OAAO,CAACqB,oBAAR,IAAgCb,2BADlC,CAAA;EAGAG,IAAAA,MAAM,CACHW,aADH,EAAA,CAEGL,MAFH,EAGGC,CAAAA,OAHH,CAGWf,KAAK,IAAI;EAChB,MAAA,IAAIkB,oBAAoB,CAAClB,KAAD,CAAxB,EAAiC;EAC/BU,QAAAA,OAAO,CAACM,IAAR,CAAajB,cAAc,CAACC,KAAD,CAA3B,CAAA,CAAA;EACD,OAAA;EACF,KAPH,CAAA,CAAA;EAQD,GAAA;;EAED,EAAO,OAAA;EAAES,IAAAA,SAAF;EAAaC,IAAAA,OAAAA;EAAb,GAAP,CAAA;EACD,CAAA;EAEM,SAASU,OAAT,CACLZ,MADK,EAELa,eAFK,EAGLxB,OAHK,EAIC;EACN,EAAI,IAAA,OAAOwB,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,KAAK,IAA/D,EAAqE;EACnE,IAAA,OAAA;EACD,GAAA;;EAED,EAAA,MAAMC,aAAa,GAAGd,MAAM,CAACK,gBAAP,EAAtB,CAAA;EACA,EAAA,MAAMU,UAAU,GAAGf,MAAM,CAACW,aAAP,EAAnB,CANM;;EASN,EAAMV,MAAAA,SAAS,GAAIY,eAAD,CAAqCZ,SAArC,IAAkD,EAApE,CATM;;EAWN,EAAA,MAAMC,OAAO,GAAIW,eAAD,CAAqCX,OAArC,IAAgD,EAAhE,CAAA;EAEAD,EAAAA,SAAS,CAACM,OAAV,CAAkBS,kBAAkB,IAAI;EAAA,IAAA,IAAA,qBAAA,CAAA;;EACtCF,IAAAA,aAAa,CAACG,KAAd,CACEjB,MADF,EAEE,EACE,IAAGX,OAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAGA,OAAO,CAAE6B,cAAZ,KAAG,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAyBjB,SAA5B,CADF;EAEEb,MAAAA,WAAW,EAAE4B,kBAAkB,CAAC5B,WAAAA;EAFlC,KAFF,EAME4B,kBAAkB,CAAC1B,KANrB,CAAA,CAAA;EAQD,GATD,CAAA,CAAA;EAWAY,EAAAA,OAAO,CAACK,OAAR,CAAgBY,eAAe,IAAI;EAAA,IAAA,IAAA,sBAAA,CAAA;;EACjC,IAAM3B,MAAAA,KAAK,GAAGuB,UAAU,CAACK,GAAX,CAAeD,eAAe,CAACzB,SAA/B,CAAd,CADiC;;EAIjC,IAAA,IAAIF,KAAJ,EAAW;EACT,MAAIA,IAAAA,KAAK,CAACF,KAAN,CAAY+B,aAAZ,GAA4BF,eAAe,CAAC7B,KAAhB,CAAsB+B,aAAtD,EAAqE;EACnE7B,QAAAA,KAAK,CAAC8B,QAAN,CAAeH,eAAe,CAAC7B,KAA/B,CAAA,CAAA;EACD,OAAA;;EACD,MAAA,OAAA;EACD,KATgC;;;EAYjCyB,IAAAA,UAAU,CAACE,KAAX,CACEjB,MADF,EAEE,EACE,IAAGX,OAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAGA,OAAO,CAAE6B,cAAZ,KAAG,IAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAyBhB,OAA5B,CADF;EAEET,MAAAA,QAAQ,EAAE0B,eAAe,CAAC1B,QAF5B;EAGEC,MAAAA,SAAS,EAAEyB,eAAe,CAACzB,SAAAA;EAH7B,KAFF,EAOEyB,eAAe,CAAC7B,KAPlB,CAAA,CAAA;EASD,GArBD,CAAA,CAAA;EAsBD;;EC5GD;EACA;EACA;EACA;EACA;EACA;EACO,eAAeiC,yBAAf,CAAyC;EAC9CC,EAAAA,WAD8C;EAE9CC,EAAAA,SAF8C;EAG9CC,EAAAA,MAAM,GAAG,IAAA,GAAO,EAAP,GAAY,EAAZ,GAAiB,EAHoB;EAI9CC,EAAAA,MAAM,GAAG,EAJqC;EAK9CC,EAAAA,cAAAA;EAL8C,CAAzC,EAMgC;EACrC,EAAI,IAAA;EACF,IAAA,MAAMC,eAAe,GAAG,MAAMJ,SAAS,CAACK,aAAV,EAA9B,CAAA;;EAEA,IAAA,IAAID,eAAJ,EAAqB;EACnB,MAAIA,IAAAA,eAAe,CAACE,SAApB,EAA+B;EAC7B,QAAMC,MAAAA,OAAO,GAAGC,IAAI,CAACC,GAAL,KAAaL,eAAe,CAACE,SAA7B,GAAyCL,MAAzD,CAAA;EACA,QAAA,MAAMS,MAAM,GAAGN,eAAe,CAACF,MAAhB,KAA2BA,MAA1C,CAAA;;EACA,QAAIK,IAAAA,OAAO,IAAIG,MAAf,EAAuB;EACrBV,UAAAA,SAAS,CAACW,YAAV,EAAA,CAAA;EACD,SAFD,MAEO;EACLxB,UAAAA,OAAO,CAACY,WAAD,EAAcK,eAAe,CAACQ,WAA9B,EAA2CT,cAA3C,CAAP,CAAA;EACD,SAAA;EACF,OARD,MAQO;EACLH,QAAAA,SAAS,CAACW,YAAV,EAAA,CAAA;EACD,OAAA;EACF,KAAA;EACF,GAhBD,CAgBE,OAAOE,GAAP,EAAY;EACZ,IAAA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCjB,MAAAA,WAAW,CAACkB,SAAZ,EAAwBC,CAAAA,KAAxB,CAA8BL,GAA9B,CAAA,CAAA;EACAd,MAAAA,WAAW,CACRkB,SADH,EAEGE,CAAAA,IAFH,CAGI,0IAHJ,CAAA,CAAA;EAKD,KAAA;;EACDnB,IAAAA,SAAS,CAACW,YAAV,EAAA,CAAA;EACD,GAAA;EACF,CAAA;EAED;EACA;EACA;EACA;EACA;;EACO,eAAeS,sBAAf,CAAsC;EAC3CrB,EAAAA,WAD2C;EAE3CC,EAAAA,SAF2C;EAG3CE,EAAAA,MAAM,GAAG,EAHkC;EAI3CmB,EAAAA,gBAAAA;EAJ2C,CAAtC,EAK6B;EAClC,EAAA,MAAMC,aAA8B,GAAG;EACrCpB,IAAAA,MADqC;EAErCI,IAAAA,SAAS,EAAEE,IAAI,CAACC,GAAL,EAF0B;EAGrCG,IAAAA,WAAW,EAAEtC,SAAS,CAACyB,WAAD,EAAcsB,gBAAd,CAAA;EAHe,GAAvC,CAAA;EAMA,EAAA,MAAMrB,SAAS,CAACsB,aAAV,CAAwBA,aAAxB,CAAN,CAAA;EACD,CAAA;EAED;EACA;EACA;EACA;;EACO,SAASC,2BAAT,CACLC,KADK,EAEL;EACA,EAAMC,MAAAA,qBAAqB,GAAGD,KAAK,CAACzB,WAAN,CAC3Bb,aAD2B,EAAA,CAE3BwC,SAF2B,CAEjB,MAAM;EACfN,IAAAA,sBAAsB,CAACI,KAAD,CAAtB,CAAA;EACD,GAJ2B,CAA9B,CAAA;EAMA,EAAMG,MAAAA,wBAAwB,GAAGH,KAAK,CAACzB,WAAN,CAC9BnB,gBAD8B,EAAA,CAE9B8C,SAF8B,CAEpB,MAAM;EACfN,IAAAA,sBAAsB,CAACI,KAAD,CAAtB,CAAA;EACD,GAJ8B,CAAjC,CAAA;EAMA,EAAA,OAAO,MAAM;EACXC,IAAAA,qBAAqB,EAAA,CAAA;EACrBE,IAAAA,wBAAwB,EAAA,CAAA;EACzB,GAHD,CAAA;EAID,CAAA;EAED;EACA;EACA;;EACO,SAASC,kBAAT,CACLJ,KADK,EAEwB;EAC7B,EAAIK,IAAAA,eAAe,GAAG,KAAtB,CAAA;EACA,EAAA,IAAIC,6BAAJ,CAAA;;EACA,EAAMC,MAAAA,WAAW,GAAG,MAAM;EACxBF,IAAAA,eAAe,GAAG,IAAlB,CAAA;EACAC,IAAAA,6BAA6B,IAA7B,IAAA,GAAA,KAAA,CAAA,GAAAA,6BAA6B,EAAA,CAAA;EAC9B,GAHD,CAH6B;;;EAS7B,EAAME,MAAAA,cAAc,GAAGlC,yBAAyB,CAAC0B,KAAD,CAAzB,CAAiCS,IAAjC,CAAsC,MAAM;EACjE,IAAI,IAAA,CAACJ,eAAL,EAAsB;EACpB;EACAC,MAAAA,6BAA6B,GAAGP,2BAA2B,CAACC,KAAD,CAA3D,CAAA;EACD,KAAA;EACF,GALsB,CAAvB,CAAA;EAOA,EAAA,OAAO,CAACO,WAAD,EAAcC,cAAd,CAAP,CAAA;EACD;;;;;;;;;;;;;;;;;;;;ECzJM,MAAME,cAAc,gBAAGC,yBAAK,CAACC,aAAN,CAC5BC,SAD4B,CAAvB,CAAA;EAGP,MAAMC,yBAAyB,gBAAGH,yBAAK,CAACC,aAAN,CAA6B,KAA7B,CAAlC;EAGA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASG,qBAAT,CACEC,OADF,EAEEC,cAFF,EAGE;EACA,EAAA,IAAID,OAAJ,EAAa;EACX,IAAA,OAAOA,OAAP,CAAA;EACD,GAAA;;EACD,EAAA,IAAIC,cAAc,IAAI,OAAOC,MAAP,KAAkB,WAAxC,EAAqD;EACnD,IAAA,IAAI,CAACA,MAAM,CAACC,uBAAZ,EAAqC;EACnCD,MAAAA,MAAM,CAACC,uBAAP,GAAiCT,cAAjC,CAAA;EACD,KAAA;;EAED,IAAOQ,OAAAA,MAAM,CAACC,uBAAd,CAAA;EACD,GAAA;;EAED,EAAA,OAAOT,cAAP,CAAA;EACD,CAAA;EA8BM,MAAMU,mBAAmB,GAAG,CAAC;EAClCrE,EAAAA,MADkC;EAElCsE,EAAAA,QAFkC;EAGlCL,EAAAA,OAHkC;EAIlCC,EAAAA,cAAc,GAAG,KAAA;EAJiB,CAAD,KAKU;EAC3CN,EAAAA,yBAAK,CAACW,SAAN,CAAgB,MAAM;EACpBvE,IAAAA,MAAM,CAACwE,KAAP,EAAA,CAAA;EACA,IAAA,OAAO,MAAM;EACXxE,MAAAA,MAAM,CAACyE,OAAP,EAAA,CAAA;EACD,KAFD,CAAA;EAGD,GALD,EAKG,CAACzE,MAAD,CALH,CAAA,CAAA;EAOA,EAAA,MAAM0E,OAAO,GAAGV,qBAAqB,CAACC,OAAD,EAAUC,cAAV,CAArC,CAAA;EAEA,EACE,oBAAAN,yBAAA,CAAA,aAAA,CAAC,yBAAD,CAA2B,QAA3B,EAAA;EAAoC,IAAA,KAAK,EAAE,CAACK,OAAD,IAAYC,cAAAA;EAAvD,GACE,eAAAN,yBAAA,CAAA,aAAA,CAAC,OAAD,CAAS,QAAT,EAAA;EAAkB,IAAA,KAAK,EAAE5D,MAAAA;EAAzB,GAAkCsE,EAAAA,QAAlC,CADF,CADF,CAAA;EAKD,CApBM;;ECnEP,MAAMK,kBAAkB,gBAAGf,yBAAK,CAACC,aAAN,CAAoB,KAApB,CAA3B,CAAA;EAGO,MAAMe,mBAAmB,GAAGD,kBAAkB,CAACE,QAA/C;;ACMA,QAAMC,0BAA0B,GAAG,CAAC;EACzC9E,EAAAA,MADyC;EAEzCsE,EAAAA,QAFyC;EAGzCS,EAAAA,cAHyC;EAIzCC,EAAAA,SAJyC;EAKzC,EAAG/B,GAAAA,KAAAA;EALsC,CAAD,KAMU;EAClD,EAAM,MAAA,CAACgC,WAAD,EAAcC,cAAd,CAAA,GAAgCtB,yBAAK,CAACuB,QAAN,CAAe,IAAf,CAAtC,CAAA;EACA,EAAA,MAAMC,IAAI,GAAGxB,yBAAK,CAACyB,MAAN,CAAa;EAAEN,IAAAA,cAAF;EAAkBC,IAAAA,SAAAA;EAAlB,GAAb,CAAb,CAAA;EAEApB,EAAAA,yBAAK,CAACW,SAAN,CAAgB,MAAM;EACpBa,IAAAA,IAAI,CAACE,OAAL,GAAe;EAAEP,MAAAA,cAAF;EAAkBC,MAAAA,SAAAA;EAAlB,KAAf,CAAA;EACD,GAFD,CAAA,CAAA;EAIApB,EAAAA,yBAAK,CAACW,SAAN,CAAgB,MAAM;EACpB,IAAIgB,IAAAA,OAAO,GAAG,KAAd,CAAA;EACAL,IAAAA,cAAc,CAAC,IAAD,CAAd,CAAA;EACA,IAAA,MAAM,CAAC1B,WAAD,EAAcgC,OAAd,CAAyBnC,GAAAA,kBAAkB,CAAC,EAChD,GAAG+B,IAAI,CAACE,OAAL,CAAaP,cADgC;EAEhDvD,MAAAA,WAAW,EAAExB,MAAAA;EAFmC,KAAD,CAAjD,CAAA;EAKAwF,IAAAA,OAAO,CAAC9B,IAAR,CAAa,MAAM;EACjB,MAAI,IAAA,CAAC6B,OAAL,EAAc;EACZH,QAAAA,IAAI,CAACE,OAAL,CAAaN,SAAb,oBAAAI,IAAI,CAACE,OAAL,CAAaN,SAAb,EAAA,CAAA;EACAE,QAAAA,cAAc,CAAC,KAAD,CAAd,CAAA;EACD,OAAA;EACF,KALD,CAAA,CAAA;EAOA,IAAA,OAAO,MAAM;EACXK,MAAAA,OAAO,GAAG,IAAV,CAAA;EACA/B,MAAAA,WAAW,EAAA,CAAA;EACZ,KAHD,CAAA;EAID,GAnBD,EAmBG,CAACxD,MAAD,CAnBH,CAAA,CAAA;EAqBA,EAAA,oBACE4D,wCAAC,mBAAD,EAAA,QAAA,CAAA;EAAqB,IAAA,MAAM,EAAE5D,MAAAA;EAA7B,GAAyCiD,EAAAA,KAAzC,CACE,eAAAW,yBAAA,CAAA,aAAA,CAAC,mBAAD,EAAA;EAAqB,IAAA,KAAK,EAAEqB,WAAAA;EAA5B,GAA0CX,EAAAA,QAA1C,CADF,CADF,CAAA;EAKD;;AC3CM,QAAMmB,iBAAiC,GAAG,CAAC;EAAE5D,EAAAA,eAAAA;EAAF,CAAD,KAAyB;EACxE,EAAM5B,MAAAA,SAAS,GAAG,CAAC,GAAG4B,eAAe,CAACQ,WAAhB,CAA4BpC,SAAhC,CAAlB,CAAA;EACA,EAAMC,MAAAA,OAAO,GAAG,CAAC,GAAG2B,eAAe,CAACQ,WAAhB,CAA4BnC,OAAhC,CAAhB,CAAA;EACA,EAAA,MAAMF,MAAuB,GAAG,EAC9B,GAAG6B,eAD2B;EAE9BQ,IAAAA,WAAW,EAAE;EAAEpC,MAAAA,SAAF;EAAaC,MAAAA,OAAAA;EAAb,KAAA;EAFiB,GAAhC,CAHwE;;EASxE,EAAMwF,MAAAA,aAAa,GAAG,CAAC,GAAGxF,OAAJ,CAAayF,CAAAA,IAAb,CACpB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACtG,KAAF,CAAQ+B,aAAR,GAAwBwE,CAAC,CAACvG,KAAF,CAAQ+B,aADtB,CAAtB,CATwE;;EAcxE,EAAA,IAAIqE,aAAa,CAACI,MAAd,GAAuB,CAA3B,EAA8B;EAC5B,IAAA,MAAMC,UAAU,GAAGL,aAAa,CAACM,KAAd,EAAnB,CAAA;EACAhG,IAAAA,MAAM,CAACqC,WAAP,CAAmBnC,OAAnB,GAA6BA,OAAO,CAAC+F,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAKH,UAA1B,CAA7B,CAAA;EACA,IAAA,OAAO/F,MAAP,CAAA;EACD,GAAA;;EAED,EAAA,OAAO8D,SAAP,CAAA;EACD;;;;;;;;;;;;;;;"}